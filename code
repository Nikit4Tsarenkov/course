#include<iostream>	
#include<string>
#include<fstream>
#include<vector>
#include<cstdlib>
#include<Windows.h>
using namespace std;

class Animal
{

private:
	int amount;
	string weight;
	string bodyGrowth;
	string bodyHeight;
	string animalType;
	string animalClass;
	string animalFamily;
	string animalSpecies;

public:
	void Setamount(int x)
	{
		amount = x;
	}
	void Setweight(string x)
	{
		weight = x;
	}
	void SetbodyGrowth(string x)
	{
		bodyGrowth = x;
	}
	void SetbodyHeight(string x)
	{
		bodyHeight = x;
	}
	void SetanimalType(string x)
	{
		animalType = x;
	}
	void SetanimalClass(string x)
	{
		animalClass = x;
	}
	void SetanimalFamily(string x)
	{
		animalFamily = x;
	}
	void SetanimalSpecies(string x)
	{
		animalSpecies = x;
	}



	string Getweight()
	{
		return weight;
	}
	string GetbodyGrowth()
	{
		return bodyGrowth;
	}
	string GetbodyHeight()
	{
		return bodyHeight;
	}
	string GetanimalSpecies()
	{
		return animalSpecies;
	}
	string GetanimalFamily()
	{
		return animalFamily;
	}
	string GetanimalType()
	{
		return animalType;
	}
	string GetanimalClass()
	{
		return animalClass;
	}
	int Getamount()
	{
		return amount;
	}
};
void menu()
{
	cout << "Input 1 to watch all the information of our ZOO!" << endl;
	cout << "Input 2 to add new animals" << endl;
	cout << "Input 3 to delete animals" << endl;
	cout << "Input q to quit" << endl;

}

void addinfo(string filename, vector<Animal>  &data) {
	ifstream fin(filename);
	string str;
	for (unsigned int i = 0; i < data.size(); i++) {
		for (int j = 0; j < 9; j++)
		{
			getline(fin, str, '/');
			switch (j)
			{
			case 0:data[i].SetanimalType(str); break;
			case 1:data[i].SetanimalClass(str); break;
			case 2:data[i].SetanimalFamily(str); break;
			case 3:data[i].SetanimalSpecies(str); break;
			case 4:data[i].Setweight(str); break;
			case 5:data[i].SetbodyGrowth(str); break;
			case 6:data[i].SetbodyHeight(str); break;
			case 7:data[i].Setamount(stoi(str)); break;
			case 8:break;
			}
		}
	}
	fin.close();
}

int aniumalCounter(string filename) {
	ifstream fin(filename);
	char *str = new char[1024];
	int count = 0;
	while (!fin.eof())
	{
		fin.getline(str, 1024, '\n');
		count++;
	}
	delete[] str;
	fin.close();
	return count;
}

void outputVector(vector <Animal> vectr)
{
	for (unsigned i = 0; i < vectr.size(); i++)
	{
		cout << "\tType: " << vectr[i].GetanimalType() << endl;
		cout << "\tClass: " << vectr[i].GetanimalClass() << endl;
		cout << "\tFamily: " << vectr[i].GetanimalFamily() << endl;
		cout << "\tspecies: " << vectr[i].GetanimalSpecies() << endl;
		cout << "\tWeight: " << vectr[i].Getweight() << endl;
		cout << "\tBody Height: " << vectr[i].GetbodyGrowth() << endl;
		cout << "\tBody lenght: " << vectr[i].GetbodyHeight() << endl << endl;
		cout << "\tAmount: " << vectr[i].Getamount() << endl << endl;


	}
}
void input_info(string &animalType, string &animalClass, string &animalFamily, string &animalSpecies, string &Weight, string &BodyHeight, string &BodyGrowth, int &amount)
	{
		cout << "Input Type: "; cin >> animalType;
		cout << "Input Class: "; cin >> animalClass;
		cout << "Input Family: "; cin >> animalFamily;
		cout << "Input Species: "; cin >> animalSpecies;
		cout << "Input Weight: "; cin >> Weight;
		cout << "Input Body Height: "; cin >> BodyHeight;
		cout << "Input Body lenght: "; cin >> BodyGrowth;
		cout << "Input amout of species: "; cin >> amount;
	}

//void addData(vector<Animal>&vectro, string filename) {
//	int amout;
//	string animalType, animalClass, animalFamily, animalSpecies, weight, bodyGrowth, bodyHeight;
//	input_info(animalType, animalClass, animalFamily, animalSpecies, weight, bodyGrowth, bodyHeight);
//	if (checkDataByMonth(year, month, vectro) == true) {
//		cout << "Data of " << year << "-" << month << " already entered\n";
//	}
//	else {
//		inputMonthInformation(salary, enviroment, taxes, food, others);
//		vectro.push_back(userdata(year, month, salary, enviroment, taxes, food, others));
//		refreshUserdataFile(Vect, filename);
//	}
//}


int main()

{
	setlocale(LC_ALL, "ru");
	int count = aniumalCounter("Animals.txt");
	vector <Animal> data(count);
	addinfo("Animals.txt", data);
	char choise;
	while (true)
	{
		menu();
		cin >> choise;
		system("cls");
		switch (choise)
		{
		case '1':outputVector(data); break;
		case '2': break;
		case '3': break;
		case 'q': return 0;

		}
	}

}


